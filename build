#!/bin/sh

if [ "$(id -u)" != "0" ]
  then echo "Please run as root"
  exit
fi

clear
echo "\033[1;33m                          ________ __________.____    ________  "
echo "\033[1;33m                          \\_____  \\\\______    \\    |   \\_____  \\ "
echo "\033[1;32m                           /   |   \\|     ___/    |    /  ____/ "
echo "\033[1;36m                          /    |    \\    |   |    |___/       \\ "
echo "\033[1;34m                          \\_______  /____|   |_______ \\_______ \\"
echo "\033[1;33m      _____            .___.__    \033[1;34m\\/\033[1;33m  __________     \033[1;34m\\/       \\/\033[1;33m      .___ "
echo "\033[1;33m     /  _  \\  __ __  __| _/|__| ___   \\______   \\ ________ _______  __| _/"
echo "\033[1;32m    /  /_\\  \\|  |  \\/ __ | |  |/ __\\   |    |  _// __\\__  \\\\_   __ \\/ __ | "
echo "\033[1;36m   /    |    \\  |  / /_/ | |  ( /_/ )  |    |   ( /_/ ) __ \\|  | \\/ /_/ | "
echo "\033[1;34m   \\____|__  /____/\\____ | |__|\\___/   |______  /\\___(____  /__|  \\____ | "
echo "\033[1;34m           \\/           \\/                    \\/          \\/           \\/ \033[0m"
echo "Installation script for Raspberry Pi and compatibles"
echo "Library version 1.4.0, 21st of May 2018"
echo "Copyright (c) 2016-2018 Maarten Janssen, Cheerful"
echo ""

echo -n "Checking for SPI devices... "
if [ "$(ls /dev/*spi* 2>/dev/null)" != "" ]
then
	echo "\033[0;32mOk\033[0m"
else
	echo "\033[0;31mFailed\033[0m"
	echo "\nNo SPI devices were found enabled on your Pi."
	echo "Please run '\033[1;34msudo raspi-config\033[0m' and enable SPI from the 'Interfacing Options'"
	echo "menu. If you are using a different board then please consult its documentation"
	echo "on how to enable SPI on your board."
	echo ""
	exit
fi

echo -n "Checking for WiringPi... "
if ! type "gpio" > /dev/null
then
	echo "\033[0;31mFailed\033[0m"
	echo "\nWiringPi was not found."
	echo -n "Do you want to download and install it now? "
	read REPLY
	REPLY=$(echo "$REPLY" | awk '{gsub(/ /, "", $0); print toupper(substr($0==""?"N":$0, 1, 1))}')

	if [ $REPLY = "Y" ]
	then
		echo -n "Downloading and installing WiringPi... "
		apt-get install -y git-core > /dev/null
		rm -rf opl2_temp
		mkdir opl2_temp
		cd opl2_temp
		git clone --quiet git://git.drogon.net/wiringPi > /dev/null
		cd wiringPi
		./build > /dev/null
		cd ../..
		rm -rf opl2_temp

		# Check if WiringPi installed ok...
		if ! type "gpio" > /dev/null; then
			echo "\033[0;31mFailed\033[0m"
			echo "WiringPi installation failed! Sorry mate, you're on your own."
			echo ""
			exit
		fi
		echo "\033[0;32mDone\033[0m"
	else
		echo "OPL2 Audio Board installation cannot continue without WiringPi."
		echo ""
		exit
	fi
else
	echo "\033[0;32mOk\033[0m"
fi

echo -n "Building the OPL2 library... "
sed -i 's/^\s*#define BOARD_TYPE.*/\t#define BOARD_TYPE RASPBERRY_PI/' src/OPL2.h
gcc -std=c++11 -c -fPIC src/OPL2.cpp -lwiringPi
gcc -shared -o libOPL2.so OPL2.o
mv libOPL2.so /usr/lib/
cp src/OPL2.h /usr/include/
rm OPL2.o
ldconfig
echo "\033[0;32mDone\033[0m"

echo -n "Compiling examples... "
gcc -std=c++11 -Wall -o examples_pi/demotune/demotune examples_pi/demotune/demotune.cpp -lOPL2 -lwiringPi
gcc -std=c++11 -Wall -o examples_pi/drums/drums examples_pi/drums/drums.cpp -lOPL2 -lwiringPi
gcc -std=c++11 -Wall -o examples_pi/simpletone/simpletone examples_pi/simpletone/simpletone.cpp -lOPL2 -lwiringPi
gcc -std=c++11 -Wall -o examples_pi/opl2play/opl2play examples_pi/opl2play/opl2play.cpp -lOPL2 -lwiringPi -lz
gcc -std=c++11 -Wall -o examples_pi/frequency_sweep/sweep examples_pi/frequency_sweep/sweep.cpp -lOPL2 -lwiringPi -lz
echo "\033[0;32mDone\033[0m"
echo "Installation complete."

echo ""
./connecting

echo -n "Are you ready to try your OPL2 Audio Board? "
read REPLY
REPLY=$(echo "$REPLY" | awk '{gsub(/ /, "", $0); print toupper(substr($0==""?"N":$0, 1, 1))}')
if [ $REPLY = "Y" ]
then
	echo "If all went successful you should hear music playing now!"
	./examples_pi/demotune/demotune &
fi
echo ""

